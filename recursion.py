# -*- coding: utf-8 -*-
"""Recursion

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18atiCeCiWd2VQMeU9D6az2NPGAfTK3n_
"""

#Lucas Vandenakker
#CS-175
#Q1

def sum(n):
  if n ==1:
    return 1
  else:
    return n + sum(n-1)
n=15
print(f"The sum of numbers from 1 to {n} is: {sum(n)}")

#Lucas Vandenakker
#CS-175
#Q2

def reverseString(tempStr):
  if not tempStr:
    return tempStr
  else:
    return reverseString(tempStr[1:]) + tempStr[0]

str1 = "Hello World!"
print(f"The reverse of {str1} is: {reverseString(str1)}")

#Lucas Vandenakker
#CS-175
#Q3

def isPalindrome(tempStr):
  if not tempStr:
    return True
  if tempStr[0] != tempStr[-1]:
    return False

  else:
    return isPalindrome(tempStr[1:-1])

str2 = "race car"

str3 = str2.replace(" ", "")

print(f"Is the string, {str2}, a palindrome?: {isPalindrome(str3)}")

#Lucas Vandenakker
#CS-175
#Q4
def factorials(n):
  if n ==0: #base case
    return 1
  else:
    return n * factorials(n-1)

print(factorials(4))

#Lucas Vandenakker
#CS-175
#Q5

#The output of the factorial(4) will be 4*3*2*1 which is 24. so B.

#Lucas Vandenakker
#CS-175
#Q6

def fibonacci(n):
  if n==1:
    return 0
  elif n == 2:
    return 1
  else:
    return fibonacci(n-1) + fibonacci(n-2)

print(fibonacci(5))

#The code provided is added the n value to the fibonacci(n-1). However, you need to be add the sum of the previous 2 values
#So you must replace n with factorial(n-2) and change n=0 to n=1. and n=1 to n=2

#Lucas Vandenakker
#CS-175
#Multi Choice 1

#B Base Case

#Lucas Vandenakker
#CS-175
#Multi Choice 2

#B It stops calling itself and returns whatever value is inside basecase

#Lucas Vandenakker
#CS-175
#Multi Choice 3

#D You do not need to iterate through a loop using recursion

#Lucas Vandenakker
#CS-175
#Multi Choice 4

#C Stack

#Lucas Vandenakker
#CS-175
#Multi Choice 5

#A F(1) = 0, F(2) = 1